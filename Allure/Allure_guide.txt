УСТАНОВКЕ ALLURE НА ПК

1. Скачать JDK для своей ОС: https://learn.microsoft.com/en-us/java/openjdk/download (Windows x64 файл msi).
2. Перезагрузить ПК и в поиске набрать "переменные среды" - перейти в них. Должна появиться среда "path" с jdk установленной версии.
   (Проверить установку Java в командной строке Windows или терминале Pycharm командой "java --version")
   (Для получения информации о дальнейшей установке Allure можно перейти сюда: https://allurereport.org/docs/install-for-windows/)
3. Установить менеджер пакетов Scoop (для Windows):
    4.1. Перейти на стр. https://scoop.sh/ — там ниже поля ввода для поиска будут 2 команды для терминала
    4.2. Открыть PowerShell (для Windows), в который поочередно вставить и выполнить эти команды — д.б. сообщение "successfull"
         (Проверить установку Scoop в командной строке или терминале Pycharm командой "scoop --version")
4. Установить Allure Report в командной строке/терминале: "scoop install allure"
   (Проверить установку Allure Report командой "allure --version")

-----------------------------------------------------------------------------------
ПОДКЛЮЧЕНИЕ ALLURE REPORTS К ПРОЕКТУ В PYCHARM

1. Установить Allure в проект:
     > pip install allure-pytest

2. Импортировать Allure во все файлы *_page.py и test_*.py (прописать внутри них import allure)
3. Декорировать в файлах все что нужно для отчета (см. блок ниже).
4. Создать папку "allure-results" в корне проекта, куда будут сохраняться данные в формате json для генерации отчета:
     > pytest --alluredir=allure-results    (или pytest -v --alluredir allure-results)

4.1. Сгенерировать отчет и запустить веб сервер для просмотра этого отчета:
     > allure serve results    (затем остановить процесс в терминале по ctrl+C)

5. Сгенерировать отчет локально на ПК в виде веб приложения (на основе данных из папки "allure-results"):
     > allure generate allure-results --clean -o allure-report (ключ --clean очищает уже существующую папку allure-report, если она есть)

6. Запустить для просмотра отчет в браузере: навести курсор и нажать ЛКМ на файле репорта "index.html" —> Open in —> Browser —> Chrome.
7. Для просмотра в отчете истории результатов предыдущих запусков тестов нужно перед каждым новым запуском тестов
   копировать из папки "allure-report" папку "history" и вставить ее в папку "allure-results".
   (Т.е. нужно выполнять такую цепочку действий:
   pytest --alluredir=allure-results —> allure generate allure-results --clean -o allure-report —> скопировать папку history —>
   запустить отчет в браузере с историей (и т.д. повторять эту последовательность действий каждый раз)

   P.S. Для автоматического обновления истории запуска тестов в отчете после прогона тестов в гитхабе, нужно прописать соотв. инструкции
        в файле "run_tests.yml" в папке Github_Actions (подробнее в https://www.youtube.com/watch?v=qqGxKDOR2DY 1:33:06)

-----------------------------------------------------------------------------------
ОСНОВНЫЕ ДЕКОРАТОРЫ ALLURE (с примерами)

Allure-декораторы можно использовать одновременно с Pytest-фикстурами.
Декорирование функций в pages в качестве степов:
  @allure.step('Клик по кнопке "Конструктор"')

Декорирование отдельных кусков кода внутри функций в качестве степов (можно помечать сразу несколько кусков кода):
  def test_open_item_page():
  with allure.step("Открытие страницы товара"):
        driver.get("http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/")

Декорирование тестовых классов в tests:
  @allure.epic("Administrations") — отношение тестового класса к какой-то глобальной логике
  @allure.feature('Users') — отношение тестового класса к одному из сервисов (разделов API)
  @allure.suite('CREATE') — отношение тестового класса к тестовому набору (напр. CRUD операции)

Декорирование тестовых функций в tests:
  @pytest.mark.regression — допустима параллельная маркировка тестов
  @allure.title('Создание нового пользователя') — по названию теста
  @allure.severity("Critical") — по степени важности бага в случае падения теста
  @allure.description('Кликаем на кнопку "Профиль", затем на кнопку "Мои заказы"') — описание основных действий внутри теста