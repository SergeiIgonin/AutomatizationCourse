import pytest                                       # для работы с фикстурами
from selenium import webdriver
# from selenium.webdriver.chrome.options import Options

@pytest.fixture(scope=function, autouse=True)       # "scope=function" будет создавать объект драйвера для каждого теста
def driver(request):
    # options = Options()
    options = webdriver.ChromeOptions()
    options.add_argument('--headless=new')
    options.add_argument('--no-sandbox')
    options.add_argument('--window-size=1920,1080')
    driver = webdriver.Chrome(options=options)
    driver.implicitly_wait(10)
    request.cls.driver = driver                     # данная конструкция создает объект драйвера внутри тестовых классов
    yield driver
    driver.quit()

^^^^^^^^ обновлено 26.11.2024
# =================================================
# "Вариант запуска тестов в разных языковых версиях сайта"
#
# import pytest
# from selenium import webdriver
#
#
# def pytest_addoption(parser):
#     parser.addoption('--language')
#
#
# @pytest.fixture(scope="function")
# def browser(request):
#     user_language = request.config.getoption("language")
#     browser = None
#     print("\nstart chrome browser for test..")
#     options = webdriver.ChromeOptions()
#     options.add_experimental_option('prefs', {'intl.accept_languages': user_language})
#     browser = webdriver.Chrome(options=options)
#     yield browser
#     print("\nquit browser..")
#     browser.quit()
#
#===========================================================================
# "Вариант запуска тестов помимо разных языков еще и докучи в разных браузерах (Chrome, Firefox)"
#
# import pytest
# from selenium import webdriver
# from selenium.webdriver.chrome.options import Options
#
#
# def pytest_addoption(parser):
#     parser.addoption('--browser_name', action='store', default="chrome",
#                      help="Choose browser: chrome or firefox")
#     parser.addoption('--language', action='store', default=None,
#                      help="Select browser language")
#
#
# @pytest.fixture(scope="function")
# def browser(request):
#     browser_name = request.config.getoption("browser_name")
#     lang = request.config.getoption("language")
#     browser = None
#     if browser_name == "chrome":
#         options = Options()
#         options.add_experimental_option('prefs', {'intl.accept_languages': lang})
#         browser = webdriver.Chrome()
#         browser = webdriver.Chrome(options=options)
#         print(f"\nstart chrome browser with language '{lang}' for test...")
#     elif browser_name == "firefox":
#         options = webdriver.FirefoxOptions()
#         options.set_preference('intl.accept_languages', lang)
#         browser = webdriver.Firefox(options=options)
#         print(f"\nstart firefox browser with language '{lang}' for test...")
#     else:
#         raise pytest.UsageError("--browser should be chrome or firefox")
#
#     yield browser
#     print("\nquit browser..")
#     browser.quit()
